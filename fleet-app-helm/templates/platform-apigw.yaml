 #API Gateway Platform
 #this works
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.apiGateway.name }}
  namespace: default
spec:
  selector:
    matchLabels:
      app: {{ .Values.apiGateway.name }}
  replicas: 1
  template:
    metadata:
      namespace: default
      labels:
        app: {{ .Values.apiGateway.name }}
    spec:
      containers:
      - name: {{ .Values.apiGateway.name }}
        image: {{ .Values.apiGateway.containers.image }}
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: production-microservice
---
# The exposed port has to be 8080 because that is what the web app component is hardcoded to use
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.fleetmanApiGateway.name }}
  namespace: default
spec:
  selector:
    app: {{ .Values.apiGateway.name }}
  ports:
    - name: {{ .Values.fleetmanApiGateway.ports.name }}
      port: {{ .Values.fleetmanApiGateway.ports.port }}
      targetPort: {{ .Values.fleetmanApiGateway.ports.targetPort }}
  type: {{ .Values.fleetmanApiGateway.type }}

# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: api-gateway
#   namespace: default
# spec:
#   selector:
#     matchLabels:
#       app: api-gateway
#   replicas: 1
#   template:
#     metadata:
#       namespace: default
#       labels:
#         app: api-gateway
#     spec:
#       containers:
#       - name: api-gateway
#         image: richardchesterwood/k8s-fleetman-api-gateway:release2
#         env:
#         - name: SPRING_PROFILES_ACTIVE
#           value: production-microservice
#---
# The exposed port has to be 8080 because that is what the web app component is hardcoded to use
# apiVersion: v1
# kind: Service
# metadata:
#   name: fleetman-api-gateway
#   namespace: default
# spec:
#   selector:
#     app: api-gateway
#   ports:
#     - name: http
#       port: 8080
#       targetPort: 8080
#   type: NodePort